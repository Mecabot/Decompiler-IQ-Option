package com.pro100svitlo.creditCardNfcReader.iso7816emv;

import com.pro100svitlo.creditCardNfcReader.enums.TagValueTypeEnum;
import com.pro100svitlo.creditCardNfcReader.iso7816emv.a.a;
import java.lang.reflect.Field;
import java.util.LinkedHashMap;

/* compiled from: EmvTags */
public final class b {
    public static final ITag ecA = new a("71", TagValueTypeEnum.BINARY, "Issuer Script Template 1", "Contains proprietary issuer data for transmission to the ICC before the second GENERATE AC command");
    public static final ITag ecB = new a("72", TagValueTypeEnum.BINARY, "Issuer Script Template 2", "Contains proprietary issuer data for transmission to the ICC after the second GENERATE AC command");
    public static final ITag ecC = new a("77", TagValueTypeEnum.BINARY, "Response Message Template Format 2", "Contains the data objects (with tags and lengths) returned by the ICC in response to a command");
    public static final ITag ecD = new a("80", TagValueTypeEnum.BINARY, "Response Message Template Format 1", "Contains the data objects (without tags and lengths) returned by the ICC in response to a command");
    public static final ITag ecE = new a("81", TagValueTypeEnum.BINARY, "Amount, Authorised (Binary)", "Authorised amount of the transaction (excluding adjustments)");
    public static final ITag ecF = new a("82", TagValueTypeEnum.BINARY, "Application Interchange Profile", "Indicates the capabilities of the card to support specific functions in the application");
    public static final ITag ecG = new a("83", TagValueTypeEnum.BINARY, "Command Template", "Identifies the data field of a command message");
    public static final ITag ecH = new a("86", TagValueTypeEnum.BINARY, "Issuer Script Command", "Contains a command for transmission to the ICC");
    public static final ITag ecI = new a("87", TagValueTypeEnum.BINARY, "Application Priority Indicator", "Indicates the priority of a given application or group of applications in a directory");
    public static final ITag ecJ = new a("89", TagValueTypeEnum.BINARY, "Authorisation Code", "Value generated by the authorisation authority for an approved transaction");
    public static final ITag ecK = new a("8a", TagValueTypeEnum.TEXT, "Authorisation Response Code", "Code that defines the disposition of a message");
    public static final ITag ecL = new a("8c", TagValueTypeEnum.DOL, "Card Risk Management Data Object List 1 (CDOL1)", "List of data objects (tag and length) to be passed to the ICC in the first GENERATE AC command");
    public static final ITag ecM = new a("8d", TagValueTypeEnum.DOL, "Card Risk Management Data Object List 2 (CDOL2)", "List of data objects (tag and length) to be passed to the ICC in the second GENERATE AC command");
    public static final ITag ecN = new a("8e", TagValueTypeEnum.BINARY, "Cardholder Verification Method (CVM) List", "Identifies a method of verification of the cardholder supported by the application");
    public static final ITag ecO = new a("8f", TagValueTypeEnum.BINARY, "Certification Authority Public Key Index - card", "Identifies the certification authorityâ€™s public key in conjunction with the RID");
    public static final ITag ecP = new a("90", TagValueTypeEnum.BINARY, "Issuer Public Key Certificate", "Issuer public key certified by a certification authority");
    public static final ITag ecQ = new a("91", TagValueTypeEnum.BINARY, "Issuer Authentication Data", "Data sent to the ICC for online issuer authentication");
    public static final ITag ecR = new a("92", TagValueTypeEnum.BINARY, "Issuer Public Key Remainder", "Remaining digits of the Issuer Public Key Modulus");
    public static final ITag ecS = new a("93", TagValueTypeEnum.BINARY, "Signed Static Application Data", "Digital signature on critical application parameters for SDA");
    public static final ITag ecT = new a("94", TagValueTypeEnum.BINARY, "Application File Locator (AFL)", "Indicates the location (SFI, range of records) of the AEFs related to a given application");
    public static final ITag ecU = new a("95", TagValueTypeEnum.BINARY, "Terminal Verification Results (TVR)", "Status of the different functions as seen from the terminal");
    public static final ITag ecV = new a("97", TagValueTypeEnum.BINARY, "Transaction Certificate Data Object List (TDOL)", "List of data objects (tag and length) to be used by the terminal in generating the TC Hash Value");
    public static final ITag ecW = new a("98", TagValueTypeEnum.BINARY, "Transaction Certificate (TC) Hash Value", "Result of a hash function specified in Book 2, Annex B3.1");
    public static final ITag ecX = new a("99", TagValueTypeEnum.BINARY, "Transaction Personal Identification Number (PIN) Data", "Data entered by the cardholder for the purpose of the PIN verification");
    public static final ITag ecY = new a("9a", TagValueTypeEnum.NUMERIC, "Transaction Date", "Local date that the transaction was authorised");
    public static final ITag ecZ = new a("9b", TagValueTypeEnum.BINARY, "Transaction Status Information", "Indicates the functions performed in a transaction");
    private static LinkedHashMap<a, ITag> ech = new LinkedHashMap();
    public static final ITag eci = new a("06", TagValueTypeEnum.BINARY, "Object Identifier (OID)", "Universal tag for OID");
    public static final ITag ecj = new a("41", TagValueTypeEnum.NUMERIC, "Country Code", "Country code (encoding specified in ISO 3166-1) and optional national data");
    public static final ITag eck = new a("42", TagValueTypeEnum.NUMERIC, "Issuer Identification Number (IIN)", "The number that identifies the major industry and the card issuer and that forms the first part of the Primary Account Number (PAN)");
    public static final ITag ecl = new a("4f", TagValueTypeEnum.BINARY, "Application Identifier (AID) - card", "Identifies the application as described in ISO/IEC 7816-5");
    public static final ITag ecm = new a("50", TagValueTypeEnum.TEXT, "Application Label", "Mnemonic associated with the AID according to ISO/IEC 7816-5");
    public static final ITag ecn = new a("51", TagValueTypeEnum.BINARY, "File reference data element", "ISO-7816 Path");
    public static final ITag eco = new a("52", TagValueTypeEnum.BINARY, "Command APDU", "");
    public static final ITag ecp = new a("53", TagValueTypeEnum.BINARY, "Discretionary data (or template)", "");
    public static final ITag ecq = new a("61", TagValueTypeEnum.BINARY, "Application Template", "Contains one or more data objects relevant to an application directory entry according to ISO/IEC 7816-5");
    public static final ITag ecr = new a("6f", TagValueTypeEnum.BINARY, "File Control Information (FCI) Template", "Set of file control parameters and file management data (according to ISO/IEC 7816-4)");
    public static final ITag ecs = new a("73", TagValueTypeEnum.BINARY, "Directory Discretionary Template", "Issuer discretionary part of the directory according to ISO/IEC 7816-5");
    public static final ITag ect = new a("84", TagValueTypeEnum.BINARY, "Dedicated File (DF) Name", "Identifies the name of the DF as described in ISO/IEC 7816-4");
    public static final ITag ecu = new a("88", TagValueTypeEnum.BINARY, "Short File Identifier (SFI)", "Identifies the SFI to be used in the commands related to a given AEF or DDF. The SFI data object is a binary field with the three high order bits set to zero");
    public static final ITag ecv = new a("a5", TagValueTypeEnum.BINARY, "File Control Information (FCI) Proprietary Template", "Identifies the data object proprietary to this specification in the FCI template according to ISO/IEC 7816-4");
    public static final ITag ecw = new a("5f50", TagValueTypeEnum.TEXT, "Issuer URL", "The URL provides the location of the Issuerâ€™s Library Server on the Internet");
    public static final ITag ecx = new a("57", TagValueTypeEnum.BINARY, "Track 2 Equivalent Data", "Contains the data elements of track 2 according to ISO/IEC 7813, excluding start sentinel, end sentinel, and Longitudinal Redundancy Check (LRC)");
    public static final ITag ecy = new a("5a", TagValueTypeEnum.NUMERIC, "Application Primary Account Number (PAN)", "Valid cardholder account number");
    public static final ITag ecz = new a("70", TagValueTypeEnum.BINARY, "Record Template (EMV Proprietary)", "Template proprietary to the EMV specification");
    public static final ITag edA = new a("9f0e", TagValueTypeEnum.BINARY, "Issuer Action Code - Denial", "Specifies the issuerâ€™s conditions that cause the denial of a transaction without attempt to go online");
    public static final ITag edB = new a("9f0f", TagValueTypeEnum.BINARY, "Issuer Action Code - Online", "Specifies the issuerâ€™s conditions that cause a transaction to be transmitted online");
    public static final ITag edC = new a("9f10", TagValueTypeEnum.BINARY, "Issuer Application Data", "Contains proprietary application data for transmission to the issuer in an online transaction");
    public static final ITag edD = new a("9f11", TagValueTypeEnum.NUMERIC, "Issuer Code Table Index", "Indicates the code table according to ISO/IEC 8859 for displaying the Application Preferred Name");
    public static final ITag edE = new a("9f12", TagValueTypeEnum.TEXT, "Application Preferred Name", "Preferred mnemonic associated with the AID");
    public static final ITag edF = new a("9f13", TagValueTypeEnum.BINARY, "Last Online Application Transaction Counter (ATC) Register", "ATC value of the last transaction that went online");
    public static final ITag edG = new a("9f14", TagValueTypeEnum.BINARY, "Lower Consecutive Offline Limit", "Issuer-specified preference for the maximum number of consecutive offline transactions for this ICC application allowed in a terminal with online capability");
    public static final ITag edH = new a("9f15", TagValueTypeEnum.NUMERIC, "Merchant Category Code", "Classifies the type of business being done by the merchant, represented according to ISO 8583:1993 for Card Acceptor Business Code");
    public static final ITag edI = new a("9f16", TagValueTypeEnum.TEXT, "Merchant Identifier", "When concatenated with the Acquirer Identifier, uniquely identifies a given merchant");
    public static final ITag edJ = new a("9f17", TagValueTypeEnum.BINARY, "Personal Identification Number (PIN) Try Counter", "Number of PIN tries remaining");
    public static final ITag edK = new a("9f18", TagValueTypeEnum.BINARY, "Issuer Script Identifier", "Identification of the Issuer Script");
    public static final ITag edL = new a("9f1a", TagValueTypeEnum.TEXT, "Terminal Country Code", "Indicates the country of the terminal, represented according to ISO 3166");
    public static final ITag edM = new a("9f1b", TagValueTypeEnum.BINARY, "Terminal Floor Limit", "Indicates the floor limit in the terminal in conjunction with the AID");
    public static final ITag edN = new a("9f1c", TagValueTypeEnum.TEXT, "Terminal Identification", "Designates the unique location of a terminal at a merchant");
    public static final ITag edO = new a("9f1d", TagValueTypeEnum.BINARY, "Terminal Risk Management Data", "Application-specific value used by the card for risk management purposes");
    public static final ITag edP = new a("9f1e", TagValueTypeEnum.TEXT, "Interface Device (IFD) Serial Number", "Unique and permanent serial number assigned to the IFD by the manufacturer");
    public static final ITag edQ = new a("9f1f", TagValueTypeEnum.TEXT, "[Magnetic Stripe] Track 1 Discretionary Data", "Discretionary part of track 1 according to ISO/IEC 7813");
    public static final ITag edR = new a("9f20", TagValueTypeEnum.TEXT, "[Magnetic Stripe] Track 2 Discretionary Data", "Discretionary part of track 2 according to ISO/IEC 7813");
    public static final ITag edS = new a("9f21", TagValueTypeEnum.NUMERIC, "Transaction Time (HHMMSS)", "Local time that the transaction was authorised");
    public static final ITag edT = new a("9f22", TagValueTypeEnum.BINARY, "Certification Authority Public Key Index - Terminal", "Identifies the certification authorityâ€™s public key in conjunction with the RID");
    public static final ITag edU = new a("9f23", TagValueTypeEnum.BINARY, "Upper Consecutive Offline Limit", "Issuer-specified preference for the maximum number of consecutive offline transactions for this ICC application allowed in a terminal without online capability");
    public static final ITag edV = new a("9f26", TagValueTypeEnum.BINARY, "Application Cryptogram", "Cryptogram returned by the ICC in response of the GENERATE AC command");
    public static final ITag edW = new a("9f27", TagValueTypeEnum.BINARY, "Cryptogram Information Data", "Indicates the type of cryptogram and the actions to be performed by the terminal");
    public static final ITag edX = new a("9f2d", TagValueTypeEnum.BINARY, "ICC PIN Encipherment Public Key Certificate", "ICC PIN Encipherment Public Key certified by the issuer");
    public static final ITag edY = new a("9f2e", TagValueTypeEnum.BINARY, "ICC PIN Encipherment Public Key Exponent", "ICC PIN Encipherment Public Key Exponent used for PIN encipherment");
    public static final ITag edZ = new a("9f2f", TagValueTypeEnum.BINARY, "ICC PIN Encipherment Public Key Remainder", "Remaining digits of the ICC PIN Encipherment Public Key Modulus");
    public static final ITag eda = new a("9c", TagValueTypeEnum.NUMERIC, "Transaction Type", "Indicates the type of financial transaction, represented by the first two digits of ISO 8583:1987 Processing Code");
    public static final ITag edb = new a("9d", TagValueTypeEnum.BINARY, "Directory Definition File (DDF) Name", "Identifies the name of a DF associated with a directory");
    public static final ITag edc = new a("5f20", TagValueTypeEnum.TEXT, "Cardholder Name", "Indicates cardholder name according to ISO 7813");
    public static final ITag edd = new a("5f24", TagValueTypeEnum.NUMERIC, "Application Expiration Date", "Date after which application expires");
    public static final ITag ede = new a("5f25", TagValueTypeEnum.NUMERIC, "Application Effective Date", "Date from which the application may be used");
    public static final ITag edf = new a("5f28", TagValueTypeEnum.NUMERIC, "Issuer Country Code", "Indicates the country of the issuer according to ISO 3166");
    public static final ITag edg = new a("5f2a", TagValueTypeEnum.TEXT, "Transaction Currency Code", "Indicates the currency code of the transaction according to ISO 4217");
    public static final ITag edh = new a("5f2d", TagValueTypeEnum.TEXT, "Language Preference", "1â€“4 languages stored in order of preference, each represented by 2 alphabetical characters according to ISO 639");
    public static final ITag edi = new a("5f30", TagValueTypeEnum.NUMERIC, "Service Code", "Service code as defined in ISO/IEC 7813 for track 1 and track 2");
    public static final ITag edj = new a("5f34", TagValueTypeEnum.NUMERIC, "Application Primary Account Number (PAN) Sequence Number", "Identifies and differentiates cards with the same PAN");
    public static final ITag edk = new a("5f36", TagValueTypeEnum.NUMERIC, "Transaction Currency Exponent", "Indicates the implied position of the decimal point from the right of the transaction amount represented according to ISO 4217");
    public static final ITag edl = new a("5f53", TagValueTypeEnum.BINARY, "International Bank Account Number (IBAN)", "Uniquely identifies the account of a customer at a financial institution as defined in ISO 13616");
    public static final ITag edm = new a("5f54", TagValueTypeEnum.MIXED, "Bank Identifier Code (BIC)", "Uniquely identifies a bank as defined in ISO 9362");
    public static final ITag edn = new a("5f55", TagValueTypeEnum.TEXT, "Issuer Country Code (alpha2 format)", "Indicates the country of the issuer as defined in ISO 3166 (using a 2 character alphabetic code)");
    public static final ITag edo = new a("5f56", TagValueTypeEnum.TEXT, "Issuer Country Code (alpha3 format)", "Indicates the country of the issuer as defined in ISO 3166 (using a 3 character alphabetic code)");
    public static final ITag edp = new a("9f01", TagValueTypeEnum.NUMERIC, "Acquirer Identifier", "Uniquely identifies the acquirer within each payment system");
    public static final ITag edq = new a("9f02", TagValueTypeEnum.NUMERIC, "Amount, Authorised (Numeric)", "Authorised amount of the transaction (excluding adjustments)");
    public static final ITag edr = new a("9f03", TagValueTypeEnum.NUMERIC, "Amount, Other (Numeric)", "Secondary amount associated with the transaction representing a cashback amount");
    public static final ITag eds = new a("9f04", TagValueTypeEnum.NUMERIC, "Amount, Other (Binary)", "Secondary amount associated with the transaction representing a cashback amount");
    public static final ITag edt = new a("9f05", TagValueTypeEnum.BINARY, "Application Discretionary Data", "Issuer or payment system specified data relating to the application");
    public static final ITag edu = new a("9f06", TagValueTypeEnum.BINARY, "Application Identifier (AID) - terminal", "Identifies the application as described in ISO/IEC 7816-5");
    public static final ITag edv = new a("9f07", TagValueTypeEnum.BINARY, "Application Usage Control", "Indicates issuerâ€™s specified restrictions on the geographic usage and services allowed for the application");
    public static final ITag edw = new a("9f08", TagValueTypeEnum.BINARY, "Application Version Number - card", "Version number assigned by the payment system for the application");
    public static final ITag edx = new a("9f09", TagValueTypeEnum.BINARY, "Application Version Number - terminal", "Version number assigned by the payment system for the application");
    public static final ITag edy = new a("9f0b", TagValueTypeEnum.TEXT, "Cardholder Name Extended", "Indicates the whole cardholder name when greater than 26 characters using the same coding convention as in ISO 7813");
    public static final ITag edz = new a("9f0d", TagValueTypeEnum.BINARY, "Issuer Action Code - Default", "Specifies the issuerâ€™s conditions that cause a transaction to be rejected if it might have been approved online, but the terminal is unable to process the transaction online");
    public static final ITag eeA = new a("9f4e", TagValueTypeEnum.TEXT, "Merchant Name and Location", "Indicates the name and location of the merchant");
    public static final ITag eeB = new a("9f4f", TagValueTypeEnum.DOL, "Log Format", "List (in tag and length format) of data objects representing the logged data elements that are passed to the terminal when a transaction log record is read");
    public static final ITag eeC = new a("bf0c", TagValueTypeEnum.BINARY, "File Control Information (FCI) Issuer Discretionary Data", "Issuer discretionary part of the FCI (e.g. O/S Manufacturer proprietary data)");
    public static final ITag eeD = new a("df60", TagValueTypeEnum.BINARY, "VISA Log Entry", "");
    public static final ITag eeE = new a("56", TagValueTypeEnum.BINARY, "Track 1 Data", "Track 1 Data contains the data objects of the track 1 according to [ISO/IEC 7813] Structure B, excluding start sentinel, end sentinel and LRC.");
    public static final ITag eeF = new a("9f66", TagValueTypeEnum.BINARY, "Terminal Transaction Qualifiers", "Provided by the reader in the GPO command and used by the card to determine processing choices based on reader functionality");
    public static final ITag eeG = new a("9f6b", TagValueTypeEnum.BINARY, "Track 2 Data", "Track 2 Data contains the data objects of the track 2 according to [ISO/IEC 7813] Structure B, excluding start sentinel, end sentinel and LRC.");
    public static final ITag eeH = new a("9f6e", TagValueTypeEnum.BINARY, "Visa Low-Value Payment (VLP) Issuer Authorisation Code", "");
    public static final ITag eeI = new a("9f29", TagValueTypeEnum.BINARY, "Indicates the card's preference for the kernel on which the contactless application can be processed", "");
    public static final ITag eeJ = new a("9f2a", TagValueTypeEnum.BINARY, "The value to be appended to the ADF Name in the data field of the SELECT command, if the Extended Selection Support flag is present and set to 1", "");
    public static final ITag eeK = new a("9f52", TagValueTypeEnum.BINARY, "Upper Cumulative Domestic Offline Transaction Amount", "Issuer specified data element indicating the required maximum cumulative offline amount allowed for the application before the transaction goes online.");
    public static final ITag eeL = new a("9f56", TagValueTypeEnum.BINARY, "?", "");
    public static final ITag eeM = new a("9f6c", TagValueTypeEnum.BINARY, "Mag Stripe Application Version Number (Card)", "Must be personalized with the value 0x0001");
    public static final ITag eeN = new a("df3e", TagValueTypeEnum.BINARY, "?", "");
    public static final ITag eeO = new a("9f50", TagValueTypeEnum.BINARY, "Offline Accumulator Balance", "Represents the amount of offline spending available in the Card.");
    public static final ITag eeP = new a("9f51", TagValueTypeEnum.BINARY, "DRDOL", "A data object in the Card that provides the Kernel with a list of data objects that must be passed to the Card in the data field of the RECOVER AC command");
    public static final ITag eeQ = new a("9f53", TagValueTypeEnum.BINARY, "Transaction Category Code", "");
    public static final ITag eeR = new a("9f54", TagValueTypeEnum.BINARY, "DS ODS Card", "");
    public static final ITag eeS = new a("9f55", TagValueTypeEnum.BINARY, "Mobile Support Indicator", "");
    public static final ITag eeT = new a("9f5b", TagValueTypeEnum.BINARY, "DSDOL", "");
    public static final ITag eeU = new a("9f5c", TagValueTypeEnum.BINARY, "DS Requested Operator ID", "");
    public static final ITag eeV = new a("9f5d", TagValueTypeEnum.BINARY, "Application Capabilities Information", "Lists a number of card features beyond regular payment");
    public static final ITag eeW = new a("9f5e", TagValueTypeEnum.BINARY, "Data Storage Identifier", "Constructed as follows: Application PAN (without any 'F' padding) || Application PAN Sequence Number (+ zero padding)");
    public static final ITag eeX = new a("9f5f", TagValueTypeEnum.BINARY, "DS Slot Availability", "");
    public static final ITag eeY = new a("9f60", TagValueTypeEnum.BINARY, "CVC3 (Track1)", "The CVC3 (Track1) is a 2-byte cryptogram returned by the Card in the response to the COMPUTE CRYPTOGRAPHIC CHECKSUM command.");
    public static final ITag eeZ = new a("9f61", TagValueTypeEnum.BINARY, "CVC3 (Track2)", "The CVC3 (Track2) is a 2-byte cryptogram returned by the Card in the response to the COMPUTE CRYPTOGRAPHIC CHECKSUM command.");
    public static final ITag eea = new a("9f32", TagValueTypeEnum.BINARY, "Issuer Public Key Exponent", "Issuer public key exponent used for the verification of the Signed Static Application Data and the ICC Public Key Certificate");
    public static final ITag eeb = new a("9f33", TagValueTypeEnum.BINARY, "Terminal Capabilities", "Indicates the card data input, CVM, and security capabilities of the terminal");
    public static final ITag eec = new a("9f34", TagValueTypeEnum.BINARY, "Cardholder Verification (CVM) Results", "Indicates the results of the last CVM performed");
    public static final ITag eed = new a("9f35", TagValueTypeEnum.NUMERIC, "Terminal Type", "Indicates the environment of the terminal, its communications capability, and its operational control");
    public static final ITag eee = new a("9f36", TagValueTypeEnum.BINARY, "Application Transaction Counter (ATC)", "Counter maintained by the application in the ICC (incrementing the ATC is managed by the ICC)");
    public static final ITag eef = new a("9f37", TagValueTypeEnum.BINARY, "Unpredictable Number", "Value to provide variability and uniqueness to the generation of a cryptogram");
    public static final ITag eeg = new a("9f38", TagValueTypeEnum.DOL, "Processing Options Data Object List (PDOL)", "Contains a list of terminal resident data objects (tags and lengths) needed by the ICC in processing the GET PROCESSING OPTIONS command");
    public static final ITag eeh = new a("9f39", TagValueTypeEnum.NUMERIC, "Point-of-Service (POS) Entry Mode", "Indicates the method by which the PAN was entered, according to the first two digits of the ISO 8583:1987 POS Entry Mode");
    public static final ITag eei = new a("9f3a", TagValueTypeEnum.BINARY, "Amount, Reference Currency", "Authorised amount expressed in the reference currency");
    public static final ITag eej = new a("9f3b", TagValueTypeEnum.NUMERIC, "Application Reference Currency", "1â€“4 currency codes used between the terminal and the ICC when the Transaction Currency Code is different from the Application Currency Code; each code is 3 digits according to ISO 4217");
    public static final ITag eek = new a("9f3c", TagValueTypeEnum.NUMERIC, "Transaction Reference Currency Code", "Code defining the common currency used by the terminal in case the Transaction Currency Code is different from the Application Currency Code");
    public static final ITag eel = new a("9f3d", TagValueTypeEnum.NUMERIC, "Transaction Reference Currency Exponent", "Indicates the implied position of the decimal point from the right of the transaction amount, with the Transaction Reference Currency Code represented according to ISO 4217");
    public static final ITag eem = new a("9f40", TagValueTypeEnum.BINARY, "Additional Terminal Capabilities", "Indicates the data input and output capabilities of the terminal");
    public static final ITag een = new a("9f41", TagValueTypeEnum.NUMERIC, "Transaction Sequence Counter", "Counter maintained by the terminal that is incremented by one for each transaction");
    public static final ITag eeo = new a("9f42", TagValueTypeEnum.NUMERIC, "Application Currency Code", "Indicates the currency in which the account is managed according to ISO 4217");
    public static final ITag eep = new a("9f43", TagValueTypeEnum.NUMERIC, "Application Reference Currency Exponent", "Indicates the implied position of the decimal point from the right of the amount, for each of the 1â€“4 reference currencies represented according to ISO 4217");
    public static final ITag eeq = new a("9f44", TagValueTypeEnum.NUMERIC, "Application Currency Exponent", "Indicates the implied position of the decimal point from the right of the amount represented according to ISO 4217");
    public static final ITag eer = new a("9f45", TagValueTypeEnum.BINARY, "Data Authentication Code", "An issuer assigned value that is retained by the terminal during the verification process of the Signed Static Application Data");
    public static final ITag ees = new a("9f46", TagValueTypeEnum.BINARY, "ICC Public Key Certificate", "ICC Public Key certified by the issuer");
    public static final ITag eet = new a("9f47", TagValueTypeEnum.BINARY, "ICC Public Key Exponent", "ICC Public Key Exponent used for the verification of the Signed Dynamic Application Data");
    public static final ITag eeu = new a("9f48", TagValueTypeEnum.BINARY, "ICC Public Key Remainder", "Remaining digits of the ICC Public Key Modulus");
    public static final ITag eev = new a("9f49", TagValueTypeEnum.DOL, "Dynamic Data Authentication Data Object List (DDOL)", "List of data objects (tag and length) to be passed to the ICC in the INTERNAL AUTHENTICATE command");
    public static final ITag eew = new a("9f4a", TagValueTypeEnum.BINARY, "Static Data Authentication Tag List", "List of tags of primitive data objects defined in this specification whose value fields are to be included in the Signed Static or Dynamic Application Data");
    public static final ITag eex = new a("9f4b", TagValueTypeEnum.BINARY, "Signed Dynamic Application Data", "Digital signature on critical application parameters for DDA or CDA");
    public static final ITag eey = new a("9f4c", TagValueTypeEnum.BINARY, "ICC Dynamic Number", "Time-variant number generated by the ICC, to be captured by the terminal");
    public static final ITag eez = new a("9f4d", TagValueTypeEnum.BINARY, "Log Entry", "Provides the SFI of the Transaction Log file and its number of records");
    public static final ITag efA = new a("df8104", TagValueTypeEnum.BINARY, "Balance Read Before Gen AC", "");
    public static final ITag efB = new a("df8105", TagValueTypeEnum.BINARY, "Balance Read After Gen AC", "");
    public static final ITag efC = new a("df8106", TagValueTypeEnum.BINARY, "Data Needed", "");
    public static final ITag efD = new a("df8107", TagValueTypeEnum.BINARY, "CDOL1 Related Data", "");
    public static final ITag efE = new a("df8108", TagValueTypeEnum.BINARY, "DS AC Type", "");
    public static final ITag efF = new a("df8109", TagValueTypeEnum.BINARY, "DS Input (Term)", "");
    public static final ITag efG = new a("df810a", TagValueTypeEnum.BINARY, "DS ODS Info For Reader", "");
    public static final ITag efH = new a("df810b", TagValueTypeEnum.BINARY, "DS Summary Status", "");
    public static final ITag efI = new a("df810c", TagValueTypeEnum.BINARY, "Kernel ID", "");
    public static final ITag efJ = new a("df810d", TagValueTypeEnum.BINARY, "DSVN Term", "");
    public static final ITag efK = new a("df810e", TagValueTypeEnum.BINARY, "Post-Gen AC Put Data Status", "");
    public static final ITag efL = new a("df810f", TagValueTypeEnum.BINARY, "Pre-Gen AC Put Data Status", "");
    public static final ITag efM = new a("df8110", TagValueTypeEnum.BINARY, "Proceed To First Write Flag", "");
    public static final ITag efN = new a("df8111", TagValueTypeEnum.BINARY, "PDOL Related Data", "");
    public static final ITag efO = new a("df8112", TagValueTypeEnum.BINARY, "Tags To Read", "");
    public static final ITag efP = new a("df8113", TagValueTypeEnum.BINARY, "DRDOL Related Data", "");
    public static final ITag efQ = new a("df8114", TagValueTypeEnum.BINARY, "Reference Control Parameter", "");
    public static final ITag efR = new a("df8115", TagValueTypeEnum.BINARY, "Error Indication", "");
    public static final ITag efS = new a("df8116", TagValueTypeEnum.BINARY, "User Interface Request Data", "");
    public static final ITag efT = new a("df8117", TagValueTypeEnum.BINARY, "Card Data Input Capability", "");
    public static final ITag efU = new a("df8118", TagValueTypeEnum.BINARY, "CVM Capability - CVM Required", "");
    public static final ITag efV = new a("df8119", TagValueTypeEnum.BINARY, "CVM Capability - No CVM Required", "");
    public static final ITag efW = new a("df811a", TagValueTypeEnum.BINARY, "Default UDOL", "");
    public static final ITag efX = new a("df811b", TagValueTypeEnum.BINARY, "Kernel Configuration", "");
    public static final ITag efY = new a("df811c", TagValueTypeEnum.BINARY, "Max Lifetime of Torn Transaction Log Record", "");
    public static final ITag efZ = new a("df811d", TagValueTypeEnum.BINARY, "Max Number of Torn Transaction Log Records", "");
    public static final ITag efa = new a("9f62", TagValueTypeEnum.BINARY, "Track 1 bit map for CVC3", "PCVC3(Track1) indicates to the Kernel the positions in the discretionary data field of the Track 1 Data where the CVC3 (Track1) digits must be copied");
    public static final ITag efb = new a("9f63", TagValueTypeEnum.BINARY, "Track 1 bit map for UN and ATC", "PUNATC(Track1) indicates to the Kernel the positions in the discretionary data field of Track 1 Data where the Unpredictable Number (Numeric) digits and Application Transaction Counter digits have to be copied.");
    public static final ITag efc = new a("9f64", TagValueTypeEnum.BINARY, "Track 1 number of ATC digits", "The value of NATC(Track1) represents the number of digits of the Application Transaction Counter to be included in the discretionary data field of Track 1 Data");
    public static final ITag efd = new a("9f65", TagValueTypeEnum.BINARY, "Track 2 bit map for CVC3", "PCVC3(Track2) indicates to the Kernel the positions in the discretionary data field of the Track 2 Data where the CVC3 (Track2) digits must be copied");
    public static final ITag efe = new a("9f67", TagValueTypeEnum.BINARY, "Track 2 number of ATC digits", "The value of NATC(Track2) represents the number of digits of the Application Transaction Counter to be included in the discretionary data field of Track 2 Data");
    public static final ITag eff = new a("9f69", TagValueTypeEnum.BINARY, "UDOL", "");
    public static final ITag efg = new a("9f6a", TagValueTypeEnum.BINARY, "Unpredictable Number (Numeric)", "");
    public static final ITag efh = new a("9f6d", TagValueTypeEnum.BINARY, "Mag-stripe Application Version Number (Reader)", "");
    public static final ITag efi = new a("9f6f", TagValueTypeEnum.BINARY, "DS Slot Management Control", "");
    public static final ITag efj = new a("9f70", TagValueTypeEnum.BINARY, "Protected Data Envelope 1", "");
    public static final ITag efk = new a("9f71", TagValueTypeEnum.BINARY, "Protected Data Envelope 2", "");
    public static final ITag efl = new a("9f72", TagValueTypeEnum.BINARY, "Protected Data Envelope 3", "");
    public static final ITag efm = new a("9f73", TagValueTypeEnum.BINARY, "Protected Data Envelope 4", "");
    public static final ITag efn = new a("9f74", TagValueTypeEnum.BINARY, "Protected Data Envelope 5", "");
    public static final ITag efo = new a("9f75", TagValueTypeEnum.BINARY, "Unprotected Data Envelope 1", "");
    public static final ITag efp = new a("9f76", TagValueTypeEnum.BINARY, "Unprotected Data Envelope 2", "");
    public static final ITag efq = new a("9f77", TagValueTypeEnum.BINARY, "Unprotected Data Envelope 3", "");
    public static final ITag efr = new a("9f78", TagValueTypeEnum.BINARY, "Unprotected Data Envelope 4", "");
    public static final ITag efs = new a("9f79", TagValueTypeEnum.BINARY, "Unprotected Data Envelope 5", "");
    public static final ITag eft = new a("9f7c", TagValueTypeEnum.BINARY, "Merchant Custom Data", "");
    public static final ITag efu = new a("9f7d", TagValueTypeEnum.BINARY, "DS Summary 1", "");
    public static final ITag efv = new a("9f7f", TagValueTypeEnum.BINARY, "DS Unpredictable Number", "");
    public static final ITag efw = new a("df4b", TagValueTypeEnum.BINARY, "POS Cardholder Interaction Information", "");
    public static final ITag efx = new a("df61", TagValueTypeEnum.BINARY, "DS Digest H", "");
    public static final ITag efy = new a("df62", TagValueTypeEnum.BINARY, "DS ODS Info", "");
    public static final ITag efz = new a("df63", TagValueTypeEnum.BINARY, "DS ODS Term", "");
    public static final ITag ega = new a("df811e", TagValueTypeEnum.BINARY, "Mag-stripe CVM Capability – CVM Required", "");
    public static final ITag egb = new a("df811f", TagValueTypeEnum.BINARY, "Security Capability", "");
    public static final ITag egc = new a("df8120", TagValueTypeEnum.BINARY, "Terminal Action Code – Default", "");
    public static final ITag egd = new a("df8121", TagValueTypeEnum.BINARY, "Terminal Action Code – Denial", "");
    public static final ITag ege = new a("df8122", TagValueTypeEnum.BINARY, "Terminal Action Code – Online", "");
    public static final ITag egf = new a("df8123", TagValueTypeEnum.BINARY, "Reader Contactless Floor Limit", "");
    public static final ITag egg = new a("df8124", TagValueTypeEnum.BINARY, "Reader Contactless Transaction Limit (No On-device CVM)", "");
    public static final ITag egh = new a("df8125", TagValueTypeEnum.BINARY, "Reader Contactless Transaction Limit (On-device CVM)", "");
    public static final ITag egi = new a("df8126", TagValueTypeEnum.BINARY, "Reader CVM Required Limit", "");
    public static final ITag egj = new a("df8127", TagValueTypeEnum.BINARY, "TIME_OUT_VALUE", "");
    public static final ITag egk = new a("df8128", TagValueTypeEnum.BINARY, "IDS Status", "");
    public static final ITag egl = new a("df8129", TagValueTypeEnum.BINARY, "Outcome Parameter Set", "");
    public static final ITag egm = new a("df812a", TagValueTypeEnum.BINARY, "DD Card (Track1)", "");
    public static final ITag egn = new a("df812b", TagValueTypeEnum.BINARY, "DD Card (Track2)", "");
    public static final ITag ego = new a("df812c", TagValueTypeEnum.BINARY, "Mag-stripe CVM Capability – No CVM Required", "");
    public static final ITag egp = new a("df812d", TagValueTypeEnum.BINARY, "Message Hold Time", "");
    public static final ITag egq = new a("ff8101", TagValueTypeEnum.BINARY, "Torn Record", "");
    public static final ITag egr = new a("ff8102", TagValueTypeEnum.BINARY, "Tags To Write Before Gen AC", "");
    public static final ITag egs = new a("ff8103", TagValueTypeEnum.BINARY, "Tags To Write After Gen AC", "");
    public static final ITag egt = new a("ff8104", TagValueTypeEnum.BINARY, "Data To Send", "");
    public static final ITag egu = new a("ff8105", TagValueTypeEnum.BINARY, "Data Record", "");
    public static final ITag egv = new a("ff8106", TagValueTypeEnum.BINARY, "Discretionary Data", "");

    static {
        for (Field field : b.class.getFields()) {
            if (field.getType() == ITag.class) {
                try {
                    a((ITag) field.get(null));
                } catch (Throwable e) {
                    throw new RuntimeException(e);
                }
            }
        }
    }

    public static ITag H(byte[] bArr) {
        ITag J = J(bArr);
        return J == null ? I(bArr) : J;
    }

    public static ITag I(byte[] bArr) {
        return new a(bArr, TagValueTypeEnum.BINARY, "[UNKNOWN TAG]", "");
    }

    public static ITag J(byte[] bArr) {
        return (ITag) ech.get(a.G(bArr));
    }

    private static void a(ITag iTag) {
        a G = a.G(iTag.aRI());
        if (ech.containsKey(G)) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Tag already added ");
            stringBuilder.append(iTag);
            throw new IllegalArgumentException(stringBuilder.toString());
        }
        ech.put(G, iTag);
    }

    private b() {
    }
}
